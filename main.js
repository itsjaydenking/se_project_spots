!function(){"use strict";var e="";const t={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_disabled",inputErrorClass:"modal__input_type_error"},r=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},n=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},a=(e,t,r)=>{(e=>e.some(e=>!e.validity.valid))(e)?n(t,r):((e,t)=>{e.disabled=!1,e.classList.remove(t.inactiveButtonClass)})(t,r)},o=(e,t)=>{Array.from(e.querySelectorAll(t.inputSelector)).forEach(n=>{r(e,n,t)}),n(e.querySelector(t.submitButtonSelector),t)};function i(e,t,r="Save",n="Saving..."){e?(t.textContent=n,t.disabled=!0):(t.textContent=r,t.disabled=!1)}function s(e,t,r="Saving..."){t.preventDefault();const n=t.submitter,a=n.textContent;i(!0,n,a,r),e().then(()=>{t.target.reset()}).catch(console.error).finally(()=>{i(!1,n,a)})}const c=e=>{e.classList.add("modal_is-opened"),document.addEventListener("keydown",u)},d=e=>{e.classList.remove("modal_is-opened"),document.removeEventListener("keydown",u)},l=()=>{document.querySelectorAll(".modal_is-opened").forEach(d)};function u(e){"Escape"===e.key&&l()}const _=(e,t=document)=>t.querySelector(e);var m=e+"8bd92903aece9fed9ac5.svg",p=e+"350cd634429859fefcee.png",v=e+"3f562ce83766a824571e.svg",f=e+"975792ea68af0a3c209d.svg",h=e+"d73f076c46eb5467f5fc.svg";document.querySelector(".header__logo").src=m,document.querySelector(".profile__avatar").src=p,document.querySelector(".profile__edit-icon").src=v,document.querySelector(".profile__new-post-icon").src=f,document.querySelector(".profile__pencil-icon").src=h;const b=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e,t={}){return fetch(`${this._baseUrl}${e}`,{headers:this._headers,...t}).then(this._checkResponse)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return this._request("/cards")}getUserInfo(){return this._request("/users/me")}editUserInfo({name:e,about:t}){return this._request("/users/me",{method:"PATCH",body:JSON.stringify({name:e,about:t})})}updateUserAvatar({avatar:e}){return this._request("/users/me/avatar",{method:"PATCH",body:JSON.stringify({avatar:e})})}postNewCard(e){return this._request("/cards",{method:"POST",body:JSON.stringify(e)})}deleteCard(e){return this._request(`/cards/${e}`,{method:"DELETE"})}likeCard(e){return this._request(`/cards/${e}/likes`,{method:"PUT"})}dislikeCard(e){return this._request(`/cards/${e}/likes`,{method:"DELETE"})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"57edc072-caed-4edd-a330-de0f2db62a71","Content-Type":"application/json"}});let k=null,E=null;const y=e=>{_(".modal__close-btn",e).addEventListener("click",()=>d(e)),e.addEventListener("click",t=>{t.target===e&&d(e)})},C=_("#edit-profile-modal"),L=_("#new-post-modal"),S=_("#preview-modal"),g=_("#avatar-modal"),q=_("#delete-modal"),x=_(".profile__edit-button"),A=_(".modal__form",C),w=_("#profile-name-input",C),U=_("#profile-description-input",C),I=_(".profile__name"),$=_(".profile__description"),T=_(".profile__avatar"),B=_(".profile__avatar-button"),N=_(".modal__form",g),P=_("#avatar-input",g),D=_(".profile__new-post-button"),O=_(".modal__form",L),j=_("#image-link-input",L),J=_("#image-caption-input",L),H=_(".modal__submit-btn_type_delete",q),R=_(".modal__submit-btn_type_cancel",q),z=_("#card-template").content.querySelector(".card"),M=_(".cards__list");function F(e){const t=z.cloneNode(!0),r=_(".card__image",t),n=_(".card__title",t),a=_(".card__like-button",t),o=_(".card__delete-button",t);return r.src=e.link,r.alt=e.name,n.textContent=e.name,t.dataset.cardId=e._id,e.isLiked&&a.classList.add("card__like-button_active"),a.addEventListener("click",()=>{const t=e._id;a.classList.contains("card__like-button_active")?b.dislikeCard(t).then(()=>{a.classList.remove("card__like-button_active"),e.isLiked=!1}).catch(e=>{console.error("Error disliking card:",e)}):b.likeCard(t).then(()=>{a.classList.add("card__like-button_active"),e.isLiked=!0}).catch(e=>{console.error("Error liking card:",e)})}),o.addEventListener("click",()=>{E=t,c(q)}),r.addEventListener("click",()=>{const t=_("#preview-image",S),r=_("#preview-caption",S);t.src=e.link,t.alt=e.name,r.textContent=e.name,c(S)}),t}y(C),y(L),y(S),y(g),y(q),b.getAppInfo().then(([e,t])=>{k=t,e.forEach(e=>{M.append(F(e))}),I.textContent=t.name,$.textContent=t.about,T.src=t.avatar}).catch(e=>{console.error("Error loading app data:",e)}),x.addEventListener("click",()=>{w.value=I.textContent,U.value=$.textContent,o(A,t),c(C)}),A.addEventListener("submit",function(e){s(function(){return b.editUserInfo({name:w.value,about:U.value}).then(e=>{I.textContent=e.name,$.textContent=e.about,d(C)})},e)}),B.addEventListener("click",()=>{o(N,t),c(g)}),N.addEventListener("submit",function(e){s(function(){return b.updateUserAvatar({avatar:P.value}).then(e=>{T.src=e.avatar,d(g)})},e)}),D.addEventListener("click",()=>c(L)),O.addEventListener("submit",function(e){s(function(){const e={name:J.value,link:j.value};return b.postNewCard(e).then(e=>{M.prepend(F(e)),o(O,t),d(L)})},e)}),H.addEventListener("click",function(e){if(e.preventDefault(),E){const t=E.dataset.cardId,r=e.target,n=r.textContent;i(!0,r,n,"Deleting..."),b.deleteCard(t).then(()=>{E.remove(),E=null,d(q)}).catch(console.error).finally(()=>{i(!1,r,n)})}}),R.addEventListener("click",()=>{E=null,d(q)}),(e=>{document.querySelectorAll(e.formSelector).forEach(t=>{((e,t)=>{const n=Array.from(e.querySelectorAll(t.inputSelector)),o=e.querySelector(t.submitButtonSelector);a(n,o,t),n.forEach(i=>{i.addEventListener("input",function(){((e,t,n)=>{t.validity.valid?r(e,t,n):((e,t,r,n)=>{const a=e.querySelector(`#${t.id}-error`);t.classList.add(n.inputErrorClass),a.textContent=r})(e,t,t.validationMessage,n)})(e,i,t),a(n,o,t)})})})(t,e)})})(t)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,